   Compiling mithril v0.0.1 (file:///path/to/mithril)
     Running target/mithril-5759c8b9f5aa87dd

running 101 tests
test collisions::narrowphase::proximity::tests::cube_cube::edge_edge_no_contact_test ... ok
test collisions::narrowphase::proximity::tests::cube_cube::edge_face_no_contact_test ... ok
test collisions::narrowphase::proximity::tests::cube_cube::edge_edge_contact_test ... ok
test collisions::narrowphase::proximity::tests::cube_cube::face_face_contact_test ... ok
test collisions::narrowphase::proximity::tests::cube_cube::face_face_no_contact_test ... ok
test collisions::narrowphase::proximity::tests::cube_cube::vertex_face_no_contact_test ... ok
test collisions::narrowphase::proximity::tests::cube_cube::vertex_vertex_no_contact_test ... ok
test collisions::simple_collisions::tests::bodies_iter_mut_test ... ok
test collisions::narrowphase::proximity::tests::cube_cube::vertex_vertex_contact_test ... ok
test collisions::simple_collisions::tests::bodies_iter_test ... ok
test collisions::simple_collisions::tests::create_body_test ... ok
test collisions::simple_collisions::tests::find_body_test ... ok
test collisions::simple_collisions::tests::find_body_mut_test ... ok
test core::state::tests::new_stationary_test ... ok
test core::state::tests::new_with_position_test ... ok
test core::state::tests::set_angular_velocity_test ... ok
test core::state::tests::new_with_rotation_test ... ok
test core::state::tests::set_position_test ... ok
test core::state::tests::set_position_with_vector_test ... ok
test core::state::tests::set_rotation_test ... ok
test core::state::tests::set_velocity_test ... ok
test core::state::tests::set_velocity_with_vector_test ... ok
test core::state::tests::transform_direction::rotation_and_translation_test ... ok
test core::state::tests::transform_direction::rotation_only_test ... ok
test core::state::tests::transform_direction::translation_only_test ... ok
test core::state::tests::transform_point::rotation_and_translation_test ... ok
test core::state::tests::transform_point::rotation_only_test ... ok
test core::state::tests::transform_point::translation_only_test ... ok
test core::state::tests::with_angular_velocity_test ... ok
test core::state::tests::with_position_test ... ok
test core::state::tests::with_rotation_test ... ok
test core::state::tests::with_velocity_test ... ok
test dynamics::simple_dynamics::tests::gravity_test ... ok
test dynamics::simple_dynamics::tests::update_constant_velocity_test ... ok
test dynamics::simple_dynamics::tests::update_with_gravity_test ... ok
test collisions::narrowphase::proximity::tests::cube_cube::edge_face_contact_test ... ok
test materials::rigid::tests::impls::density_of_test ... ok
test materials::rigid::tests::impls::equality_test ... ok
test materials::rigid::tests::impls::mass_of_test ... ok
test materials::rigid::tests::new_test ... ok
test math::matrix::tests::determinant_test ... ok
test math::matrix::tests::get_test ... ok
test math::matrix::tests::impls::addition_test ... ok
test math::matrix::tests::impls::division_by_scalar_test ... ok
test math::matrix::tests::impls::index_mut_test ... ok
test math::matrix::tests::impls::multiplication_by_matrix_test ... ok
test math::matrix::tests::impls::multiplication_by_scalar_test ... ok
test math::matrix::tests::impls::multiplication_by_vector_test ... ok
test math::matrix::tests::impls::negation_test ... ok
test math::matrix::tests::impls::subtraction_test ... ok
test math::matrix::tests::inverse_test ... ok
test math::matrix::tests::new_diag_test ... ok
test math::matrix::tests::new_from_raw_test ... ok
test math::matrix::tests::new_identity_test ... ok
test math::matrix::tests::new_rotation_test ... ok
test math::matrix::tests::new_skew_test ... ok
test math::matrix::tests::new_test ... ok
test math::quaternion::tests::impls::clone_test ... ok
test math::quaternion::tests::impls::index_setter_test ... ok
test math::quaternion::tests::impls::negation_test ... ok
test math::quaternion::tests::impls::quat_quat_multiplication_test ... ok
test math::quaternion::tests::impls::quat_scalar_division_test ... ok
test math::quaternion::tests::impls::quat_scalar_multiplication_test ... ok
test math::quaternion::tests::impls::subtraction_test ... ok
test math::quaternion::tests::inverse_test ... ok
test math::quaternion::tests::length_sq_test ... ok
test math::quaternion::tests::length_test ... ok
test math::quaternion::tests::mult_test ... ok
test math::quaternion::tests::new_from_axis_angle_test ... ok
test math::quaternion::tests::new_identity_test ... ok
test math::quaternion::tests::new_test ... ok
test math::quaternion::tests::normalize_test ... ok
test math::quaternion::tests::sub_test ... ok
test math::tests::approx_eq_test ... ok
test collisions::narrowphase::proximity::tests::cube_cube::vertex_face_contact_test ... ok
test math::vector::tests::add_test ... ok
test math::vector::tests::cross_product_test ... ok
test math::vector::tests::distance_to_test ... ok
test math::vector::tests::dot_product_test ... ok
test math::vector::tests::impls::addition_test ... ok
test math::vector::tests::impls::clone_test ... ok
test math::vector::tests::impls::index_mut_test ... ok
test math::vector::tests::impls::index_test ... ok
test math::vector::tests::impls::negation_test ... ok
test math::vector::tests::impls::subtraction_test ... ok
test math::vector::tests::impls::vect_scalar_mult_test ... ok
test math::vector::tests::length_test ... ok
test math::vector::tests::new_test ... ok
test math::vector::tests::new_zero_test ... ok
test math::vector::tests::normalize_test ... ok
test math::vector::tests::outer_product_test ... ok
test math::vector::tests::rotate_by_quaternion_test ... ok
test math::vector::tests::squared_length_test ... ok
test math::vector::tests::sub_test ... ok
test shapes::primitives::cube::tests::impls::equality_test ... ok
test shapes::primitives::cube::tests::impls::support_indices_for_test ... ok
test shapes::primitives::cube::tests::impls::vertices_len_test ... ok
test shapes::primitives::cube::tests::impls::volume_test ... ok
test shapes::primitives::cube::tests::new_test ... ok
test dynamics::simple_dynamics::tests::update_with_contact_test ... ok
test dynamics::simple_dynamics::tests::update_with_rotating_contact_test ... FAILED

failures:

---- dynamics::simple_dynamics::tests::update_with_rotating_contact_test stdout ----
  [Collisions create_body] Body[1]: Pos=[0, 0, 0], Rot=[1, 0, 0, 0], Shape=Cube{ w=1, h=1, d=1 }
[Collisions create_body] Body[2]: Pos=[1.356025, 0, 0.2], Rot=[0.888074, 0, 0.325058, -0.325058], Shape=Cube{ w=1, h=1, d=1 }
[Dynamics update] START step=0.2
[Dynamics update] Body[1]: Pos=[-0.178571, 0, 0], Rot=[1, 0, 0, 0]
[Dynamics update] Body[2]: Pos=[1.334597, 0, 0.2], Rot=[0.888074, 0, 0.325058, -0.325058]
[Dynamics update] END
AFTER BODY 0: VEL: [-0.892857, 0, 0] => 0.892857
AFTER BODY 0: ANG VEL: [0, 0, 0] => 0
AFTER BODY 1: VEL: [-0.107143, 0, 0] => 0.107143
AFTER BODY 1: ANG VEL: [0, 0, 0] => 0
thread 'dynamics::simple_dynamics::tests::update_with_rotating_contact_test' panicked at 'assertion failed: `(left == right) && (right == left)` (left: `Vector { elements: [-0.892857, 0, 0] }`, right: `Vector { elements: [-1, 0, 0] }`)', src/dynamics/../../tests/behaviours/dynamics_behaviour.rs:170



failures:
    dynamics::simple_dynamics::tests::update_with_rotating_contact_test

test result: FAILED. 100 passed; 1 failed; 0 ignored; 0 measured


